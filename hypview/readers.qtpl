{% import "net/http" %}
{% import "strings" %}
{% import "path" %}
{% import "os" %}

{% import "github.com/bouncepaw/mycorrhiza/internal/cfg" %}
{% import "github.com/bouncepaw/mycorrhiza/internal/hyphae" %}
{% import "github.com/bouncepaw/mycorrhiza/l18n" %}
{% import "github.com/bouncepaw/mycorrhiza/internal/mimetype" %}
{% import "github.com/bouncepaw/mycorrhiza/internal/user" %}
{% import "github.com/bouncepaw/mycorrhiza/web/viewutil" %}

{% func MediaMenu(rq *http.Request, h hyphae.Hypha, u *user.User) %}
{% code
	lc := l18n.FromRequest(rq)
%}
<main class="main-width media-tab">
	<h1>{%s= lc.Get("ui.media_title", &l18n.Replacements{"name": beautifulLink(h.CanonicalName())}) %}</h1>
	{% switch h.(type) %}
	{% case *hyphae.MediaHypha %}
		<p class="explanation">{%s lc.Get("ui.media_tip") %} <a href="/help/en/media" class="shy-link">{%s lc.Get("ui.media_what_is") %}</a></p>
	{% default %}
		<p class="explanation">{%s lc.Get("ui.media_empty") %} <a href="/help/en/media" class="shy-link">{%s lc.Get("ui.media_what_is") %}</a></p>
	{% endswitch %}

	<section class="amnt-grid">
	{% switch h := h.(type) %}
	{% case *hyphae.MediaHypha %}
		{% code
			mime := mimetype.FromExtension(path.Ext(h.MediaFilePath()))
			fileinfo, err := os.Stat(h.MediaFilePath()) %}
		{% if err == nil %}
		<fieldset class="amnt-menu-block">
			<legend class="modal__title modal__title_small">{%s lc.Get("ui.media_stat") %}</legend>
			<p class="modal__confirmation-msg"><b>{%s lc.Get("ui.media_stat_size") %}</b> {%s lc.GetPlural64("ui.media_size_value", fileinfo.Size())%}</p>
			<p><b>{%s lc.Get("ui.media_stat_mime") %}</b> {%s mime %}</p>
		</fieldset>
		{% endif %}

		{% if strings.HasPrefix(mime, "image/") %}
		<fieldset class="amnt-menu-block">
			<legend class="modal__title modal__title_small">{%s lc.Get("ui.media_include") %}</legend>
			<p class="modal__confirmation-msg">{%s lc.Get("ui.media_include_tip") %}</p>
			<pre class="codeblock"><code>img { {%s h.CanonicalName() %} }</code></pre>
		</fieldset>
		{% endif %}
	{% endswitch %}

	{% if u.CanProceed("upload-binary") %}
	<form action="/upload-binary/{%s h.CanonicalName() %}"
			method="post" enctype="multipart/form-data"
			class="upload-binary modal amnt-menu-block">
		<fieldset class="modal__fieldset">
			<legend class="modal__title modal__title_small">{%s lc.Get("ui.media_new") %}</legend>
			<p class="modal__confirmation-msg">{%s lc.Get("ui.media_new_tip") %}</p>
			<label for="upload-binary__input"></label>
			<input type="file" id="upload-binary__input" name="binary">

			<button type="submit" class="btn stick-to-bottom" value="Upload">{%s lc.Get("ui.media_upload")%}</button>
		</fieldset>
	</form>
	{% endif %}


	{% switch h := h.(type) %}
	{% case *hyphae.MediaHypha %}
		{% if u.CanProceed("remove-media") %}
		<form action="/remove-media/{%s h.CanonicalName() %}" method="post" class="modal amnt-menu-block" method="POST">
			<fieldset class="modal__fieldset">
				<legend class="modal__title modal__title_small">{%s lc.Get("ui.media_remove") %}</legend>
				<p class="modal__confirmation-msg">{%s lc.Get("ui.media_remove_tip") %}</p>
				<button type="submit" class="btn" value="Remove media">{%s lc.Get("ui.media_remove_button") %}</button>
			</fieldset>
		</form>
		{% endif %}
	{% endswitch %}

	</section>
</main>
{% endfunc %}


{% func Revision(meta viewutil.Meta, h hyphae.Hypha, contents, revHash string) %}
<main class="main-width">
	<section>
		<p>{%s meta.Lc.Get("ui.revision_warning") %} <a href="/rev-text/{%s revHash %}/{%s h.CanonicalName() %}">{%s meta.Lc.Get("ui.revision_link") %}</a></p>
		{%s= NaviTitle(meta, h.CanonicalName()) %}
		{%s= contents %}
	</section>
</main>
{% for _, scriptPath := range cfg.ViewScripts %}
<script src="{%s scriptPath %}"></script>
{% endfor %}
{% endfunc %}
